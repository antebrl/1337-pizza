stages:
  - commit
  - acceptance
  - build

# Base reusable job for building/pushing container images with Kaniko
.build_container_image:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    DOCKERFILE_LOCATION: "unset"
    CONTAINER_NAME: "unset"
    TAG_NAME: "unset"
    CREATE_LATEST_TAG: "false"
  script:
    - mkdir -p /kaniko/.docker
    - echo "DOCKERFILE_LOCATION: $DOCKERFILE_LOCATION"
    - echo "CONTAINER_NAME: $CONTAINER_NAME"
    - echo "TAG_NAME: $TAG_NAME"
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - |
      DESTINATIONS="--destination $CI_REGISTRY_IMAGE/$CONTAINER_NAME:$TAG_NAME \
                    --destination $CI_REGISTRY_IMAGE/$CONTAINER_NAME:${CI_COMMIT_BRANCH}"

      if [[ "$CREATE_LATEST_TAG" == "true" ]]; then
        DESTINATIONS="$DESTINATIONS --destination $CI_REGISTRY_IMAGE/$CONTAINER_NAME:latest"
      fi

      /kaniko/executor \
        --context $CI_PROJECT_DIR \
        --cache=true \
        --dockerfile $DOCKERFILE_LOCATION \
        $DESTINATIONS

# Global variables for naming
variables:
  DEVELOPMENT_CONTAINER_NAME: "development-container"
  DEVELOPMENT_CONTAINER_TAG: "${CI_COMMIT_BRANCH}_${CI_COMMIT_SHORT_SHA}"
  RELEASE_CONTAINER_NAME: "release-container"
  RELEASE_CONTAINER_TAG: "${CI_COMMIT_BRANCH}_${CI_COMMIT_SHORT_SHA}"

# Build development container on branch pushes and merge requests
create_development_container_image:
  stage: commit
  extends: .build_container_image
  variables:
    DOCKERFILE_LOCATION: $CI_PROJECT_DIR/infra/build_artifacts/development.dockerfile
    CONTAINER_NAME: $DEVELOPMENT_CONTAINER_NAME
    TAG_NAME: $DEVELOPMENT_CONTAINER_TAG
    CREATE_LATEST_TAG: "true"
  rules:
    # skip schedules
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    # run on merge requests
    - if: '$CI_MERGE_REQUEST_ID'
      when: always
    # run on dev, main, master branches
    - if: '$CI_COMMIT_BRANCH =~ /^dev|main|master$/'
      when: always

# Build release candidate container (main/master or MR)
create_release_candidate:
  stage: acceptance
  extends: .build_container_image
  variables:
    DOCKERFILE_LOCATION: $CI_PROJECT_DIR/infra/build_artifacts/release.dockerfile
    CONTAINER_NAME: $RELEASE_CONTAINER_NAME
    TAG_NAME: $RELEASE_CONTAINER_TAG
    CREATE_LATEST_TAG: "true"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_MERGE_REQUEST_ID'
      when: always
    - if: '$CI_COMMIT_BRANCH =~ /^main|master$/'
      when: always

# Optional dummy job to avoid empty pipelines
dummy_keepalive:
  stage: build
  script:
    - echo "This is a dummy job to keep the pipeline unstuck."
  rules:
    - when: always
